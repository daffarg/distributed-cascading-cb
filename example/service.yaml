apiVersion: v1
kind: ConfigMap
metadata:
  name: service-a-env-config
data:
  PORT: "8080"
  CB_PORT: "5320"
  SERVICE_NAME: "SERVICE A"
  NEXT_SERVICE_ADDRESS: http://service-b.circuit-breaker.svc.cluster.local:3000/generate
  KUBE_SERVICE_ADDRESS: service-a.circuit-breaker.svc.cluster.local:3000
  USE_CIRCUIT_BREAKER: "true"
  TRACING_BACKEND_URL: host.docker.internal:4317
  CURRENT_ENDPOINT: http://service-a.circuit-breaker.svc.cluster.local:3000/generate

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: cb-a-env-config
data:
  SERVICE_IP: 127.0.0.1
  SERVICE_PORT: "5320"
  SERVICE_NAME: "CIRCUIT BREAKER A"
  CB_MAX_CONSECUTIVE_FAILURES: "5"
  CB_TIMEOUT: "600"
  CB_CONSUMER_GROUP: SERVICE_A
  KVROCKS_HOST: kvrocks-service-a.circuit-breaker.svc.cluster.local
  KVROCKS_PORT: "6666"
  KAFKA_ADDRESS: host.docker.internal:9092
  TRACING_BACKEND_URL: host.docker.internal:4317
  KAFKA_CONFIG_PATH: ./../config/client.properties
  GET_STATUS_FIRST_TIME_TIMEOUT: "2000"
  FIRST_POLL_TIMEOUT: "100"

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: cb-pv-service-a
spec:
  capacity:
    storage: 400Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: /cb-a/config
    type: DirectoryOrCreate

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cb-pvc-service-a
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 300Mi
  storageClassName: manual

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-a
  labels:
    app: service-a
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-a
  template:
    metadata:
      labels:
        app: service-a
    spec:
      initContainers:
        - name: config-setup
          image: alpine
          command: ['sh', '-c', 'cp /config/kafka/client.properties /config/client.properties']
          volumeMounts:
            - name: config-volume-kafka
              mountPath: /config/kafka
            - name: config-volume-cb-a
              mountPath: /config
      containers:
        - name: service-a
          image: daffarg/example-service:v6.2
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: service-a-env-config
        - name: circuit-breaker
          image: daffarg/distributed-cascading-cb:v0.7-alpha-test
          ports:
            - containerPort: 5320
          envFrom:
            - configMapRef:
                name: cb-a-env-config
          volumeMounts:
            - name: config-volume-cb-a
              mountPath: /config
      volumes:
        - name: config-volume-kafka
          configMap:
            name: kafka-config
        - name: config-volume-cb-a
          persistentVolumeClaim:
            claimName: cb-pvc-service-a

---

apiVersion: v1
kind: Service
metadata:
  name: service-a
spec:
  type: NodePort
  selector:
    app: service-a
  ports:
    - port: 3000
      targetPort: 8080
      nodePort: 30000
